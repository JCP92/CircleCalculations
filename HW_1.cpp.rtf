{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green116\blue0;\red100\green56\blue32;\red196\green26\blue22;
\red170\green13\blue145;\red92\green38\blue153;\red28\green0\blue207;\red63\green110\blue116;\red46\green13\blue110;
\red38\green71\blue75;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab543
\pard\tx543\pardeftab543\pardirnatural\partightenfactor0

\f0\fs22 \cf2 \CocoaLigature0 //\cf0 \
\cf2 //  main.cpp\cf0 \
\cf2 //  CSIII_HW_1\cf0 \
\cf2 //\cf0 \
\cf2 //  Created by Joshua Peckham on 9/28/16.\cf0 \
\cf2 //  Copyright \'a9 2016 Joshua Peckham. All rights reserved.\cf0 \
\cf2 /* Write Circle class with the Below elements:\
 radius: Double\
 pi: double int val of 3.14159\
 Default constructor\
 Constructor\
 setRadius\
 getRadius\
 getArea\
 getDiameter\
 getCircumference\
 */\cf0 \
\
\cf3 #include \cf4 <iostream>\cf3 \
#include \cf4 <iomanip>\cf3 \
\cf5 using\cf0  \cf5 namespace\cf0  \cf6 std\cf0 ;\
\
\cf5 class\cf0  CircleClass\{\
\cf5 private\cf0 :\
    \cf5 double\cf0  radius;\
    \cf5 double\cf0  pi = \cf7 3.14159\cf0 ;\
    \
\cf5 public\cf0 :\
    CircleClass()\{\
        \cf8 radius\cf0  = \cf7 0\cf0 ;\
    \};\
    CircleClass( \cf5 double\cf0  m );\
    \cf5 void\cf0  setRadius( \cf5 double\cf0  n );\
    \cf5 double\cf0  getRadius() \cf5 const\cf0 ;\
    \cf5 double\cf0  getArea() \cf5 const\cf0 ;\
    \cf5 double\cf0  getDiameter() \cf5 const\cf0 ;\
    \cf5 double\cf0  getCircumference() \cf5 const\cf0 ;\
    \
\};\
\
\cf8 CircleClass\cf0 ::CircleClass( \cf5 double\cf0  m )\{\
    \cf5 if\cf0  ( m <= \cf7 0\cf0  )\{\
        \cf6 cout\cf0  << \cf4 "Invalid input. Radius is still set to 0.00."\cf0  << \cf9 endl\cf0 ;\
        \cf8 radius\cf0  = \cf7 0.00\cf0 ;\
    \}\
    \cf5 else\cf0 \{\
        \cf8 radius\cf0  = m;\
    \}\
\}\
\
\cf5 void\cf0  \cf8 CircleClass\cf0 ::setRadius( \cf5 double\cf0  n )\{\
    \cf8 radius\cf0  = n;\
\}\
\
\cf5 double\cf0  \cf8 CircleClass\cf0 ::getRadius() \cf5 const\cf0 \{\
    \cf5 return\cf0  \cf8 radius\cf0 ;\
\}\
\
\cf5 double\cf0  \cf8 CircleClass\cf0 ::getArea()\cf5 const\cf0 \{\
    \cf5 return\cf0  (\cf8 pi\cf0  * \cf8 radius\cf0  * \cf8 radius\cf0 );\
\}\
\
\cf5 double\cf0  \cf8 CircleClass\cf0 ::getDiameter() \cf5 const\cf0 \{\
    \cf5 return\cf0  (\cf8 radius\cf0  * \cf7 2\cf0 );\
\}\
\
\cf5 double\cf0  \cf8 CircleClass\cf0 ::getCircumference() \cf5 const\cf0 \{\
    \cf5 return\cf0  ( \cf7 2\cf0  * \cf8 pi\cf0  * \cf8 radius\cf0 );\
\}\
\
\
\cf5 int\cf0  main() \{\
    \cf8 CircleClass\cf0  c;\
    \cf5 double\cf0  rad = \cf7 0\cf0 ;\
    \
    \cf6 cout\cf0  << \cf4 "What is the Radius of the Circle?"\cf0  << \cf9 endl\cf0 ;\
    \cf6 cin\cf0  >> rad;\
    \
    c.\cf10 setRadius\cf0 (rad);\
    \cf6 cout\cf0  << \cf4 "Radius: "\cf0  << c.\cf10 getRadius\cf0 () << \cf9 endl\cf0 ;\
    \cf6 cout\cf0  << \cf9 fixed\cf0  << \cf9 setprecision\cf0 (\cf7 2\cf0 ) << \cf4 "Area: "\cf0  << c.\cf10 getArea\cf0 () << \cf9 endl\cf0 ;\
    \cf6 cout\cf0  << \cf4 "Diameter: "\cf0  << c.\cf10 getDiameter\cf0 () << \cf9 endl\cf0 ;\
    \cf6 cout\cf0  << \cf9 fixed\cf0   << \cf9 setprecision\cf0 (\cf7 2\cf0 ) << \cf4 "Circumference: "\cf0  << c.\cf10 getCircumference\cf0 () << \cf9 endl\cf0 ;\
\}\
}